#!/usr/bin/python3

level = 0
AS_MAIN = __name__ == '__main__'
def log(msg, lvl=1):
    if lvl <= level and AS_MAIN:
        print(msg)

class Hosts(object):
    def __init__(self):
        self.db = dict()
        self.lines_processed = 0
        self.duplicate_lines = 0
    def loads(self, hosts):
        for line in hosts.split('\n'):
            parts = line.split()
            if not parts or parts[0] == '#':
                continue
            for host in parts[1:]:
                if host[0] == '#':
                    break
                if host in self.db:
                    log(" -warning: replacing duplicate entry for {host}"
                            .format(host=host), 2)
                    self.duplicate_lines += 1
                self.db[host] = parts[0]
                log(" added {host} -> {ip}".format(host=host, ip=parts[0]), 3)
                self.lines_processed += 1
    def dumps(self, unix_lines=True):
        res = ""
        lf = "\n" if unix_lines else "\r\n"
        for host, ip in self.db.items():
            # hack to reduce stress on system
            if ip == "127.0.0.1" and "localhost" not in host:
                ip = "0.0.0.0"
            res += "{ip} {host:>8}{lf}".format(ip=ip, host=host, lf=lf)
        return res
    def load(self, f):
        if hasattr(f, "name"):
            log("loading file {}".format(f.name))
        self.loads(f.read())
    def dump(self, f, unix_lines=True):
        f.write(self.dumps(unix_lines))
if AS_MAIN:
    from argparse import ArgumentParser
    from os.path import isdir,join
    from os import walk
    import sys
    parser = ArgumentParser(description="combine hosts files in a directory")
    parser.add_argument('--verbose', '-v', action='count', default=0)
    parser.add_argument('--out', '-o', type=str, default='/dev/stdout',
            help="Output hosts file")
    parser.add_argument('paths', type=str, nargs='+', 
            help='paths to hosts files or directories containing them')
    args = parser.parse_args()
    level = args.verbose
    dest = args.out
    h = Hosts()
    for p in args.paths:
        if isdir(p):
            for root, dirs, files in walk(p):
                for f in files:
                    with open(join(root, f), "r") as fd:
                        h.load(fd)
        else:
            with open(p, "r") as fd:
                h.load(fd)
    log("...{:d} lines processed, {:d} duplicates, so {:d} hosts listed.".format(
         h.lines_processed,
         h.duplicate_lines,
         h.lines_processed - h.duplicate_lines))
    with open(dest, "w") as fd:
        fd.write(
"""# This is a combined hosts file generated by {exe}.
# 
# Don't edit this file directly, especially if {exe} is run on a
# cron job, instead try editing the composite hosts files used to create this.
# (There are (hopefully) comments in those files anyway)
#

""".format(exe=parser.prog))
        h.dump(fd)

